{"version":3,"file":"static/js/415.febc854c.chunk.js","mappings":"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","sources":["utils/getRandomNumber.js","webpack://expense-tracker/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","webpack://expense-tracker/./src/pages/HomePage/Homepage.module.css?8f2d","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const randomNumber = () => {\n    const randomNumber = Math.random() * (999 - 100) + 100;\n    return randomNumber.toFixed(3);\n  };\n  export const randomPercentage = () => Math.random() * (100 - 1) + 1;","// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"moveBox\":\"BgImageWrapper_moveBox__FESZv\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../utils/getRandomNumber';\nimport s from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [animationDuration] = useState(15);\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const viewportWidthRef = useRef(window.innerWidth);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, [currentStep]);\n\n  const handleAnimationStart = () => {\n    const viewportWidth = window.innerWidth;\n    viewportWidthRef.current = viewportWidth;\n\n    if (viewportWidth < 768) {\n      return;\n    }\n\n    startTimeRef.current = performance.now();\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateAnimationProgress = () => {\n    const elapsedTime = performance.now() - startTimeRef.current;\n    const percentage = (elapsedTime / (animationDuration * 1000)) * 100;\n\n    // Check if viewport width has changed during the animation\n    if (\n      viewportWidthRef.current !== window.innerWidth &&\n      window.innerWidth < 768\n    ) {\n      return;\n    }\n\n    updateCurrentStep(percentage);\n\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateCurrentStep = percentage => {\n    setCurrentStep(prevStep => {\n      const newStep = Math.ceil(percentage / 12.5);\n      return newStep !== prevStep ? newStep : prevStep;\n    });\n  };\n\n  return (\n    <div className={s.containerImg}>\n      <div className={s.containerText} onAnimationStart={handleAnimationStart}>\n        <div className={s.containerSvg}>\n          <Icon name=\"arrow-up\" className={s.icon} size=\"18\" />\n        </div>\n        <div className={s.containerBalance}>\n          <p className={s.text}>Your balance</p>\n          <p className={s.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={s.containerPercent}>\n          <p className={s.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={s.dynamicText}></p>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Homepage_container__+aIeb\",\"containerHome\":\"Homepage_containerHome__p9VMQ\",\"containerText\":\"Homepage_containerText__HQY46\",\"containerImg\":\"Homepage_containerImg__LonzK\",\"img\":\"Homepage_img__unsqC\",\"titleUsers\":\"Homepage_titleUsers__eUWLf\",\"tx\":\"Homepage_tx__znoPD\",\"text\":\"Homepage_text__SksIm\",\"title\":\"Homepage_title__e1x5B\",\"span\":\"Homepage_span__hK6b8\",\"textDesc\":\"Homepage_textDesc__YsHGv\",\"containerButton\":\"Homepage_containerButton__-U7RA\",\"buttonUp\":\"Homepage_buttonUp__uycjm\",\"buttonIn\":\"Homepage_buttonIn__np0H5\"};"," import { NavLink } from 'react-router-dom';\nimport { BgImageWrapper } from '../../components/BgImageWrapper/BgImageWrapper';\nimport users1x from '../../assets/images/images_users_1x@.png';\nimport users2x from '../../assets/images/images_users_2x@.png';\nimport css from './Homepage.module.css';\n\nconst Home = () => {\n  return (\n    <div className={css.container}>\n      <BgImageWrapper />\n      <div className={css.containerHome}>\n        <div className={css.containerText}>\n          <p className={css.text}>Expense log</p>\n          <h1 className={css.title}>\n            Manage Your <span className={css.span}>Finances</span> Masterfully!\n          </h1>\n          <p className={css.textDesc}>\n            ExpenseTracker effortlessly empowers you to take control of your\n            finances! With intuitive features, it simplifies the process of\n            tracking and managing expenses, allowing for a stress-free mastery\n            over your financial world.\n          </p>\n          <div className={css.containerButton}>\n            <NavLink to=\"/register\" className={css.buttonUp}>\n              Sign Up\n            </NavLink>\n            <NavLink to=\"/login\" className={css.buttonIn}>\n              Sign In\n            </NavLink>\n          </div>\n        </div>\n        <div className={css.containerImg}>\n          <picture>\n            <source srcSet={`${users1x}, ${users2x} 2x`} type=\"image/png\" />\n            <img className={css.img} src={users1x} alt=\"Users photos\" />\n          </picture>\n          <div className={css.containerUsers}>\n            <h2 className={css.titleUsers}>1000 users +</h2>\n            <p className={css.tx}>\n              Trusted by users for reliable expense tracking!\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"names":["BgImageWrapper","currentStep","setCurrentStep","useState","animationDuration","randomSum","setRandomSum","randomPercent","setRandomPercent","animationRef","useRef","startTimeRef","viewportWidthRef","window","innerWidth","useEffect","Math","random","toFixed","updateAnimationProgress","percentage","performance","now","current","updateCurrentStep","requestAnimationFrame","prevStep","newStep","ceil","_jsx","className","s","children","_jsxs","onAnimationStart","handleAnimationStart","viewportWidth","Icon","name","size","Home","css","NavLink","to","srcSet","users1x","users2x","type","src","alt"],"sourceRoot":""}