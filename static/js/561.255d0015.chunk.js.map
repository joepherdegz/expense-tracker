{"version":3,"file":"static/js/561.255d0015.chunk.js","mappings":"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","sources":["webpack://expense-tracker/./src/components/CategoriesModal/CategoriesModal.module.css?8937","components/CategoriesModal/CategoriesModal.js","utils/getFormattedDate.js","webpack://expense-tracker/./src/components/TransactionForm/TransactionForm.module.css?2486","components/TransactionForm/TransactionForm.js","utils/getFormattedTime.js","webpack://expense-tracker/./src/components/TransactionTotal/TransactionTotal.module.css?f100","components/TransactionTotal/TransactionTotal.js","utils/getCurrency.js","utils/getPath.js","components/PieChart/PieChart.js","utils/countCategories.js","utils/getCurrentMonth.js","utils/getColors.js","webpack://expense-tracker/./src/components/TransactionChart/TransactionChart.module.css?4f23","components/TransactionChart/TransactionChart.js","webpack://expense-tracker/./src/pages/MainTransactionPage/MainTransactionPage.module.css?efde","pages/MainTransactionPage/MainTransactionPage.jsx","schemas/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainBox\":\"CategoriesModal_mainBox__Zfe33\",\"box\":\"CategoriesModal_box__ZGfVW\",\"mainTitle\":\"CategoriesModal_mainTitle__TN5lI\",\"title\":\"CategoriesModal_title__7dUMC\",\"listWrapper\":\"CategoriesModal_listWrapper__U704O\",\"noobjects\":\"CategoriesModal_noobjects__DgZzo\",\"noobjectsP\":\"CategoriesModal_noobjectsP__Yh4Zh\",\"listItem\":\"CategoriesModal_listItem__zk9xA\",\"listSVG\":\"CategoriesModal_listSVG__eQgow\",\"buttonSVG\":\"CategoriesModal_buttonSVG__dGXre\",\"icon\":\"CategoriesModal_icon__dTPTH\",\"labelCategory\":\"CategoriesModal_labelCategory__L+-6L\",\"inputCategory\":\"CategoriesModal_inputCategory__BsVb4\",\"subbmitButton\":\"CategoriesModal_subbmitButton__Xilkt\",\"formStyle\":\"CategoriesModal_formStyle__TZCQq\",\"inputBox\":\"CategoriesModal_inputBox__ZojVH\"};","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addCategory, deleteCategory, editCategory } from '../../redux/Category/operations';\nimport { selectCategories } from '../../redux/Category/categorySlice';\nimport { Icon } from '../../components/Icon/Icon';\nimport s from './CategoriesModal.module.css';\nimport { getTransactions } from '../../redux/Transaction/operations';\n\nexport const CategoriesModal = ({ type, transportCategory }) => {\n  const categories = useSelector(selectCategories);\n\n  const dispatch = useDispatch();\n  const ulRef = useRef(null);\n\n  const [categoryName, setCategoryName] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [categoryId, setCategoryId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleSubmitCategory = e => {\n    e.preventDefault();\n    if (categoryName.length > 16) {\n      toast.error(\n        'Category name length must be less than or equal to 16 characters long'\n      );\n      return;\n    }\n\n    if (isEditMode) {\n      dispatch(editCategory({ categoryName, categoryId }))\n        .unwrap()\n        .then(() => {\n          dispatch(getTransactions({ type }));\n          setIsEditMode(false);\n        })\n        .catch(error => toast.error('Error editing category'));\n    } else {\n      dispatch(addCategory({ type, categoryName }))\n        .unwrap()\n        .then(() => {\n          toast.success('New Category added successfully');\n\n          ulRef.current.scrollTo({\n            top: ulRef.current.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => toast.error('Error adding category'));\n    }\n    setCategoryName('');\n  };\n\n  const handleInputChange = event => {\n    setCategoryName(event.target.value);\n  };\n\n  const handleChangeCategory = (id, categoryName) => {\n    setCategoryName(categoryName);\n    setCategoryId(id);\n\n    setIsEditMode(true);\n  };\n\n  const handleGetCategory = item => {\n    transportCategory(item);\n  };\n\n  const handleDeleteCategory = (id, type) => {\n    setIsEditMode(false);\n    setIsButtonDisabled(true);\n\n    dispatch(deleteCategory({ id, type }))\n      .unwrap()\n      .then(() => toast.success('Category deleted successfully'))\n      .catch(error => {\n        toast.error('Cannot delete category with existing transactions');\n      })\n      .finally(setIsButtonDisabled(false));\n  };\n  useEffect(() => {\n    if (!isEditMode) {\n      setCategoryName('');\n    }\n  }, [isEditMode]);\n\n  return (\n    <div className={s.mainBox}>\n      <div className={s.box}>\n        <h2 className={s.mainTitle}>\n          {type === 'expenses' ? 'Expenses' : 'Incomes'}\n        </h2>\n        <h3 className={s.title}>All Category</h3>\n\n        <ul className={`${s.listWrapper} scroll scrollB`} ref={ulRef}>\n          {categories[type].length === 0 ? (\n            <li className={s.noobjects}>\n              <p className={s.noobjectsP}>There are no categories</p>\n            </li>\n          ) : (\n            categories[type].map(item => (\n              <li className={s.listItem} key={item._id}>\n                <p>{item.categoryName}</p>\n\n                <ul className={s.listSVG}>\n                  <li className={s.listSVGitem}>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleGetCategory(item)}\n                    >\n                      <Icon className={s.icon} name=\"check\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() =>\n                        handleChangeCategory(item._id, item.categoryName)\n                      }\n                    >\n                      <Icon className={s.icon} name=\"edit\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleDeleteCategory(item._id, type)}\n                      disabled={isButtonDisabled}\n                    >\n                      <Icon className={s.icon} name=\"trash-bin\" size=\"16\" />\n                    </button>\n                  </li>\n                </ul>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n\n      <form className={s.formStyle} onSubmit={handleSubmitCategory}>\n        <label className={s.labelCategory} htmlFor=\"categoryInput\">\n          {isEditMode ? 'Edit Category' : 'New Category'}\n        </label>\n        <div className={s.inputBox}>\n          <input\n            type=\"text\"\n            id=\"categoryInput\"\n            placeholder=\"Enter the text\"\n            className={s.inputCategory}\n            onChange={handleInputChange}\n            value={categoryName}\n          />\n\n          <button\n            className={s.subbmitButton}\n            type=\"submit\"\n            disabled={categoryName.length === 0}\n          >\n            {isEditMode ? 'Edit' : 'Add'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};","export const getFormattedDate = date => {\n    if (!date) return;\n  \n    if (typeof date === 'string') {\n      const parts = date.split('-');\n      const year = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1;\n      const day = parseInt(parts[2], 10);\n  \n      return new Date(year, month, day);\n    }\n  \n    const year = date.getFullYear();\n    let month = (date.getMonth() + 1).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n  \n    return `${year}-${month}-${day}`;\n  };","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"TransactionForm_formWrapper__dJW4L\",\"transactionForm\":\"TransactionForm_transactionForm__sq0n7\",\"commentField\":\"TransactionForm_commentField__jz17L\",\"typeLabel\":\"TransactionForm_typeLabel__xEpZh\",\"transactionTypes\":\"TransactionForm_transactionTypes__+X4q-\",\"customRadioBtn\":\"TransactionForm_customRadioBtn__LqsSV\",\"radioLabel\":\"TransactionForm_radioLabel__G3oR-\",\"radioBtn\":\"TransactionForm_radioBtn__02koV\",\"customFields\":\"TransactionForm_customFields__ZH0up\",\"customField\":\"TransactionForm_customField__R60kZ\",\"datePicker\":\"TransactionForm_datePicker__zE4sc\",\"datepickerContainer\":\"TransactionForm_datepickerContainer__NhIVf\",\"react-datepicker__calendar\":\"TransactionForm_react-datepicker__calendar__OSKfp\",\"timeField\":\"TransactionForm_timeField__zhVdO\",\"categoryField\":\"TransactionForm_categoryField__rZdjV\",\"fieldWrapper\":\"TransactionForm_fieldWrapper__rFSik\",\"sumLabel\":\"TransactionForm_sumLabel__W2tJp\",\"iconDate\":\"TransactionForm_iconDate__ygxny\",\"iconTime\":\"TransactionForm_iconTime__F8-gz\",\"sumInput\":\"TransactionForm_sumInput__4jseR\",\"currency\":\"TransactionForm_currency__wL7Ly\",\"submitBtn\":\"TransactionForm_submitBtn__YfJho\",\"errorField\":\"TransactionForm_errorField__aGdMb\",\"messageError\":\"TransactionForm_messageError__0Ha4P\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useModal } from 'hooks';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon } from '../Icon/Icon';\nimport { Modal } from '../Modal/Modal'\nimport { CategoriesModal } from '../CategoriesModal/CategoriesModal';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getFormattedDate } from '../../utils/getFormattedDate';\nimport { getFormattedTime } from '../../utils/getFormattedTime';\nimport { selectTransactionsError } from '../../redux/Transaction/transactionSlice';\nimport { transactionSchema } from '../../schemas/validationSchema';\n// import './DatePicke.css';\nimport s from './TransactionForm.module.css';\n\nexport const TransactionForm = ({\n  transaction,\n  transactionsType,\n  onSubmitForm,\n  history,\n}) => {\n  const user = useSelector(selectUser);\n  const isError = useSelector(selectTransactionsError);\n  const { currency } = user;\n  const [categoryId, setCategoryId] = useState('');\n  const [isOpenModalTransaction, toggleModalTransaction] = useModal();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(transactionSchema),\n  });\n  const navigate = useNavigate();\n\n  const clearFieldCategory = useCallback(\n    type => {\n      setValue('category', '');\n      setCategoryId('');\n      navigate(`/transactions/${type}`);\n    },\n    [setValue, setCategoryId, navigate]\n  );\n\n  const setDefaultValues = useCallback(() => {\n    setValue('type', transactionsType);\n    setValue('date', getFormattedDate(new Date()));\n    setValue('time', getFormattedTime());\n    setValue('category', '');\n    setCategoryId('');\n    setValue('sum', '');\n    setValue('comment', '');\n    clearErrors();\n  }, [setValue, setCategoryId, transactionsType, clearErrors]);\n\n  useEffect(() => {\n    if (!transaction) {\n      setDefaultValues();\n    }\n\n    if (transaction) {\n      const { type, date, time, category, sum, comment } = transaction;\n\n      setCategoryId(category?._id);\n      setValue('type', type);\n      setValue('date', date);\n      setValue('time', time);\n      setValue('category', category.categoryName);\n      setValue('sum', sum);\n      setValue('comment', comment);\n    }\n  }, [transaction, setValue, setDefaultValues]);\n\n  const handleChangeCategory = item => {\n    setValue('category', item.categoryName, { shouldValidate: true });\n    setCategoryId(item._id);\n    toggleModalTransaction();\n  };\n\n  const handleChangeDate = date => {\n    const formattedDate = getFormattedDate(date);\n    setValue('date', formattedDate, { shouldValidate: true });\n  };\n\n  const onSubmit = data => {\n    data.category = categoryId;\n\n    if (transaction) {\n      data._id = transaction._id;\n    }\n\n    onSubmitForm(data);\n\n    if (!isError && !transaction) {\n      reset();\n      setDefaultValues();\n    }\n  };\n\n  const fieldClasses = fieldName => {\n    return classNames({\n      [`${\n        s[fieldName !== 'date' ? `${fieldName + 'Field'}` : 'datePicker']\n      }`]: true,\n      [`${s.errorField}`]: errors[fieldName]?.message,\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message) {\n      return <p className={s.messageError}>{errors[fieldName]?.message}</p>;\n    }\n  };\n\n  const radioBtnExpenses = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'incomes' || history === 'incomes',\n  });\n\n  const radioBtnIncomes = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'expenses' || history === 'expenses',\n  });\n\n  return (\n    <div>\n      <div className={s.formWrapper}>\n        <form className={s.transactionForm} onSubmit={handleSubmit(onSubmit)}>\n          <div className={s.transactionTypes}>\n            <label className={radioBtnExpenses}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"expenses\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'incomes' || history === 'incomes'\n                }\n                onChange={() => clearFieldCategory('expenses')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Expense\n            </label>\n            <label className={radioBtnIncomes}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"incomes\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'expenses' || history === 'expenses'\n                }\n                onChange={() => clearFieldCategory('incomes')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Income\n            </label>\n          </div>\n          <div className={s.customFields}>\n            <label className={s.customField}>\n              Date\n              <Controller\n                control={control}\n                name=\"date\"\n                render={({ field }) => (\n                  <div className=\"datepickerContainer\">\n                    <DatePicker\n                      className={fieldClasses('date')}\n                      showPopperArrow={false}\n                      maxDate={new Date()}\n                      selected={field.value}\n                      placeholderText=\"mm/dd/yyyy\"\n                      onChange={date => {\n                        field.onChange(date);\n                        handleChangeDate(date);\n                      }}\n                      calendarClassName=\"fixed-height-calendar\"\n                    />\n                  </div>\n                )}\n              />\n              <Icon name=\"calendar\" className={s.iconDate} size=\"16\" />\n              {renderMessage('date')}\n            </label>\n            <label className={s.customField}>\n              Time\n              <input\n                className={fieldClasses('time')}\n                type=\"time\"\n                name=\"time\"\n                {...register('time')}\n              />\n              <Icon name=\"clock\" className={s.iconTime} size=\"16\" />\n              {renderMessage('time')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Category</label>\n            <input\n              className={fieldClasses('category')}\n              type=\"text\"\n              name=\"category\"\n              placeholder=\"Different\"\n              autoComplete=\"off\"\n              {...register('category')}\n              required\n              readOnly\n              onClick={toggleModalTransaction}\n            />\n            {renderMessage('category')}\n          </div>\n          <div>\n            <label className={s.sumLabel}>\n              Sum\n              <input\n                className={fieldClasses('sum')}\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"Enter the sum\"\n                autoComplete=\"off\"\n                {...register('sum')}\n              />\n              <span className={s.currency}>{currency?.toUpperCase()}</span>\n              {renderMessage('sum')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Comment</label>\n            <textarea\n              className={fieldClasses('comment')}\n              name=\"comment\"\n              placeholder=\"Enter the text\"\n              {...register('comment')}\n            />\n            {renderMessage('comment')}\n          </div>\n          <button\n            className={s.submitBtn}\n            type=\"submit\"\n            disabled={Object.entries(errors).length}\n          >\n            {transaction ? 'Save' : 'Add'}\n          </button>\n        </form>\n      </div>\n      {isOpenModalTransaction && (\n        <Modal toggleModal={toggleModalTransaction}>\n          <CategoriesModal\n            transportCategory={handleChangeCategory}\n            type={getValues('type')}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};","export const getFormattedTime = () => {\n    const currentDate = new Date();\n    const hours = String(currentDate.getHours()).padStart(2, '0');\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n  \n    return `${hours}:${minutes}`;\n  };","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TransactionTotal_link__2oJzz\",\"iconContainer\":\"TransactionTotal_iconContainer__BJGwF\",\"icon\":\"TransactionTotal_icon__Q-Kmf\",\"list\":\"TransactionTotal_list__jrKhT\",\"listItem\":\"TransactionTotal_listItem__cmNcW\",\"amountTitle\":\"TransactionTotal_amountTitle__O02xF\",\"amountDescr\":\"TransactionTotal_amountDescr__QwBck\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getCurrencyChar } from '../../utils/getCurrency';\nimport { getPath } from '../../utils/getPath';\n\nimport s from './TransactionTotal.module.css';\n\nexport const TransactionsTotal = ({\n  totalAllExpenses = null,\n  totalAllIncomes = null,\n}) => {\n  const [path, setPath] = useState({});\n  const location = useLocation();\n\n  const { totalIncomes, totalExpenses, currency } = useSelector(selectUser);\n  const currencyChar = getCurrencyChar(currency);\n\n  useEffect(() => {\n    setPath(getPath(location));\n  }, [location]);\n\n  return (\n    <div className={s.wrapper}>\n      <ul className={s.list}>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.incomes}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-up\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Expense</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllIncomes || totalIncomes}\n            </p>\n          </div>\n        </li>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.expenses}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-down\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Income</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllExpenses || totalExpenses}\n            </p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};","export function getCurrencyChar(currency) {\n    switch (currency) {\n      case 'uah':\n        return '₱';\n      case 'usd':\n        return '$';\n      case 'eur':\n        return '€';\n      default:\n        break;\n    }\n  }","export function getPath(location) {\n    const path = {};\n    if (\n      location.pathname === '/transactions/incomes' ||\n      location.pathname === '/transactions/expenses'\n    ) {\n      path.expenses = '/transactions/expenses';\n      path.incomes = '/transactions/incomes';\n    } else {\n      path.expenses = '/transactions/history/expenses';\n      path.incomes = '/transactions/history/incomes';\n    }\n    return path;\n  }","// components/PieChart/PieChart.jsx\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { useMemo } from 'react';\n\nexport const Chart = ({ data }) => {\n  const chartData = useMemo(() => data, [data]);\n\n  return (\n    <PieChart width={292} height={150}>\n      <Pie\n        dataKey=\"value\"\n        data={chartData}\n        startAngle={180}\n        endAngle={0}\n        cy={140}\n        innerRadius={95}\n        outerRadius={145}\n        paddingAngle={-10}\n        cornerRadius={10}\n        fill=\"#15151b\"\n        stroke=\"none\"\n      >\n        {chartData.map((entry, index) => (\n          <Cell\n            style={{ outline: 'none' }}\n            key={`cell-${index}`}\n            fill={entry.color}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nexport default Chart;\n","import { getColors } from './getColors';\nimport { getCurrentMoth } from './getCurrentMonth';\n\nexport function countCategories(data, total) {\n  if (!data.length) return [];\n\n  const categorySum = {};\n  const { firstDayOfMonth, lastDayOfMonth } = getCurrentMoth();\n\n  const currentMonthTransactions = data.filter(\n    item => item.date >= firstDayOfMonth && item.date <= lastDayOfMonth\n  );\n\n  if (!currentMonthTransactions.length) return [];\n\n  currentMonthTransactions.forEach(transaction => {\n    const { category, sum } = transaction;\n    if (categorySum[category.categoryName]) {\n      categorySum[category.categoryName] += sum;\n    } else {\n      categorySum[category.categoryName] = sum;\n    }\n  });\n\n  const categoriesData = [];\n\n  Object.entries(categorySum).forEach(([key, value]) => {\n    let percent = Number(((value / total) * 100).toFixed(1));\n    categoriesData.push({ name: key, value: percent });\n  });\n\n  const sumPercentages = categoriesData.reduce(\n    (total, item) => total + item.value,\n    0\n  );\n\n  const sortedCategories = categoriesData.sort((a, b) => b.value - a.value);\n\n  if (sumPercentages !== 100) {\n    const diff = 100 - sumPercentages;\n\n    if (sortedCategories[sortedCategories.length - 1].value > 1) {\n      sortedCategories[sortedCategories.length - 1].value = Number(\n        (sortedCategories[sortedCategories.length - 1].value + diff).toFixed(1)\n      );\n    } else {\n      sortedCategories[sortedCategories.length - 1].value = 0.1;\n    }\n  }\n\n  return getColors(sortedCategories);\n}","import { endOfMonth, format, startOfMonth } from 'date-fns';\n\nexport function getCurrentMoth() {\n  const currentDate = new Date();\n  const firstDayOfMonth = format(startOfMonth(currentDate), 'yyyy-MM-dd');\n  const lastDayOfMonth = format(endOfMonth(currentDate), 'yyyy-MM-dd');\n\n  return { firstDayOfMonth, lastDayOfMonth };\n}","export function getColors(data) {\n\n    const colors = [\n      '#008000 ',\n      '#32CD32',\n      '#00FA9A',\n      '#98FB98',\n      '#228B22',\n      '#2E8B57',\n      '#3CB371',\n      '#00FF7F',\n      '#66CDAA',\n      '#8FBC8F',\n      '#2F4F4F',\n      '#aabaaa',\n      '#dbf0db',\n      '#777f77',\n      '#5a5e5a',\n    ];\n  \n    data.map((item, index) => (item.color = colors[index]));\n  \n    return data;\n  }","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"TransactionChart_chartContainer__GLUxm\",\"title\":\"TransactionChart_title__BL9aZ\",\"statsWrapper\":\"TransactionChart_statsWrapper__3UYDj\",\"pieChartWrapper\":\"TransactionChart_pieChartWrapper__foBJb\",\"chartDescr\":\"TransactionChart_chartDescr__mCZQM\",\"list\":\"TransactionChart_list__ONJJT\",\"listItem\":\"TransactionChart_listItem__uDZ6L\",\"wrapperMarker\":\"TransactionChart_wrapperMarker__FBrKQ\",\"itemDescr\":\"TransactionChart_itemDescr__PpZj8\",\"itemSpan\":\"TransactionChart_itemSpan__zfztx\",\"warningWrapper\":\"TransactionChart_warningWrapper__Vjs-x\",\"warningTitle\":\"TransactionChart_warningTitle__thcWl\",\"imgNoData\":\"TransactionChart_imgNoData__+7BQP\",\"imgNoTransactions\":\"TransactionChart_imgNoTransactions__XrsFp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Chart } from '../PieChart/PieChart';\nimport { countCategories } from '../../utils/countCategories';\nimport { selectTransactions, selectTransactionsError } from '../../redux/Transaction/transactionSlice';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport warningImg from '../../assets/images/no_data_abstract.png';\nimport errorImg from '../../assets/images/server-error.png';\nimport s from './TransactionChart.module.css';\n\nexport const TransactionsChart = ({ transactionsType }) => {\n  const [categoriesData, setCategoriesData] = useState(null);\n  const dispatch = useDispatch();\n\n  const { totalIncomes, totalExpenses } = useSelector(selectUser);\n  const error = useSelector(selectTransactionsError);\n  const data = useSelector(selectTransactions);\n\n  const totalRef = useRef(\n    transactionsType === 'Incomes' ? totalIncomes : totalExpenses\n  );\n\n  useEffect(() => {\n    totalRef.current =\n      transactionsType === 'Incomes' ? totalIncomes : totalExpenses;\n  }, [totalIncomes, totalExpenses, transactionsType]);\n\n  useEffect(() => {\n    if (data === null) return;\n\n    dispatch(fetchCurrentUser())\n      .unwrap()\n      .then(() => {\n        setCategoriesData(countCategories(data, totalRef.current));\n      })\n      .catch();\n  }, [data, dispatch]);\n\n  if (data === null || categoriesData === null) return;\n\n  if (error)\n    return (\n      <div className={s.warningWrapper}>\n        <h2 className={s.warningTitle}>\n          Sorry, something went wrong. Please try again...\n        </h2>\n        <img className={s.imgNoData} src={errorImg} alt=\"Error fetch\" />\n      </div>\n    );\n\n  return !categoriesData.length ? (\n    <div className={s.warningWrapper}>\n      <h2 className={s.warningTitle}>\n        You don't have any {transactionsType.toLowerCase()} in this month.\n      </h2>\n      <img className={s.imgNoTransactions} src={warningImg} alt=\"No data\" />\n    </div>\n  ) : (\n    <div className={s.chartContainer}>\n      <h3 className={s.title}>{transactionsType} categories</h3>\n      <div className={s.statsWrapper}>\n        <div className={s.pieChartWrapper}>\n          <Chart data={categoriesData} />\n          <p className={s.chartDescr}>100%</p>\n        </div>\n        <ul className={`${s.list} scroll scrollA`}>\n          {categoriesData.map((item, index) => (\n            <li className={s.listItem} key={index}>\n              <div\n                className={s.wrapperMarker}\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <p className={s.itemDescr}>{item.name}</p>\n              <p className={s.itemSpan}>{item.value}%</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MainTransactionPage_wrapper__fe6+4\",\"title\":\"MainTransactionPage_title__MPnmq\",\"descr\":\"MainTransactionPage_descr__CFHv2\",\"titleWrapper\":\"MainTransactionPage_titleWrapper__uQPxF\",\"total\":\"MainTransactionPage_total__XrKGx\",\"form\":\"MainTransactionPage_form__yn+wM\",\"chart\":\"MainTransactionPage_chart__0aNX7\"};","import { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport { TransactionForm } from '../../components/TransactionForm/TransactionForm';\nimport { TransactionsChart } from '../../components/TransactionChart/TransactionChart';\nimport { TransactionsTotal } from '../../components/TransactionTotal/TransactionTotal';\nimport { addTransaction, getTransactions } from '../../redux/Transaction/operations';\nimport s from './MainTransactionPage.module.css';\n\nconst MainTransactions = () => {\n  const dispatch = useDispatch();\n  const { transactionsType } = useParams();\n\n  useEffect(() => {\n    dispatch(getTransactions({ type: transactionsType }));\n  }, [dispatch, transactionsType]);\n\n  const capitalizedType =\n    transactionsType[0].toUpperCase() + transactionsType.slice(1);\n\n  const onSubmitForm = transaction => {\n    dispatch(addTransaction(transaction))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        toast.success('Transaction added successfully!');\n      })\n      .catch(error => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className={s.wrapper}>\n        <div className={s.titleWrapper}>\n          <h2 className={s.title}>{capitalizedType.slice(0, -1)} Log</h2>\n          <p className={s.descr}>\n            Capture and organize every penny spent with ease! A clear view of\n            your financial habits at your fingertips.\n          </p>\n        </div>\n        <div className={s.total}>\n          <TransactionsTotal />\n        </div>\n        <div className={s.form}>\n          <TransactionForm\n            transactionsType={transactionsType}\n            onSubmitForm={onSubmitForm}\n          />\n        </div>\n        <div className={s.chart}>\n          <TransactionsChart transactionsType={capitalizedType} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainTransactions;","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});"],"names":["CategoriesModal","_ref","type","transportCategory","categories","useSelector","selectCategories","dispatch","useDispatch","ulRef","useRef","categoryName","setCategoryName","useState","isButtonDisabled","setIsButtonDisabled","categoryId","setCategoryId","isEditMode","setIsEditMode","useEffect","_jsxs","className","s","children","_jsx","ref","length","map","item","onClick","handleGetCategory","Icon","name","size","handleChangeCategory","id","_id","handleDeleteCategory","deleteCategory","unwrap","then","toast","catch","error","finally","disabled","onSubmit","e","preventDefault","editCategory","getTransactions","addCategory","current","scrollTo","top","scrollHeight","behavior","htmlFor","placeholder","onChange","event","target","value","getFormattedDate","date","parts","split","year","parseInt","month","day","Date","getFullYear","getMonth","toString","padStart","getDate","TransactionForm","transaction","transactionsType","onSubmitForm","history","user","selectUser","isError","selectTransactionsError","currency","isOpenModalTransaction","toggleModalTransaction","useModal","register","handleSubmit","reset","setValue","getValues","control","formState","errors","clearErrors","useForm","mode","resolver","yupResolver","transactionSchema","navigate","useNavigate","clearFieldCategory","useCallback","setDefaultValues","getFormattedTime","currentDate","String","getHours","getMinutes","time","category","sum","comment","fieldClasses","fieldName","_errors$fieldName","classNames","message","renderMessage","_errors$fieldName2","_errors$fieldName3","radioBtnExpenses","radioBtnIncomes","data","Controller","render","_ref2","field","DatePicker","showPopperArrow","maxDate","selected","placeholderText","formattedDate","shouldValidate","handleChangeDate","calendarClassName","autoComplete","required","readOnly","toUpperCase","Object","entries","Modal","toggleModal","TransactionsTotal","totalAllExpenses","totalAllIncomes","path","setPath","location","useLocation","totalIncomes","totalExpenses","currencyChar","getCurrencyChar","pathname","expenses","incomes","getPath","Link","to","Chart","chartData","useMemo","PieChart","width","height","Pie","dataKey","startAngle","endAngle","cy","innerRadius","outerRadius","paddingAngle","cornerRadius","fill","stroke","entry","index","Cell","style","outline","color","countCategories","total","categorySum","firstDayOfMonth","lastDayOfMonth","format","startOfMonth","endOfMonth","getCurrentMoth","currentMonthTransactions","filter","forEach","categoriesData","key","percent","Number","toFixed","push","sumPercentages","reduce","sortedCategories","sort","a","b","diff","colors","getColors","TransactionsChart","setCategoriesData","selectTransactions","totalRef","fetchCurrentUser","src","errorImg","alt","backgroundColor","toLowerCase","warningImg","MainTransactions","useParams","capitalizedType","slice","addTransaction","signUpSchema","yup","min","max","email","password","signInSchema","shape","matches","test","parsedValue","isNaN"],"sourceRoot":""}